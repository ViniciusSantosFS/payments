{
  "name": "payments",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "engines": {
    "node": "18.10.0"
  },
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/src/main",
    "start:swagger": "node dist/src/main-wagger",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "test:e2e:watch": "jest --config ./test/jest-e2e.json --watch",
    "test:e2e:cov": "jest --config ./test/jest-e2e.json --coverage",
    "keys:generate": "node -r tsconfig-paths/register -r ts-node/register scripts/generate-keys.ts",
    "typeorm:cli": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli -f ./ormconfig.ts",
    "m:generate": "npm run typeorm:cli -- migration:generate -n",
    "m:run": "npm run typeorm:cli -- migration:run",
    "doc:compodoc": "npx @compodoc/compodoc -p tsconfig.json -s",
    "k6": "k6 run -e URL=localhost:3100 dist/src/reliability/create.invoice.js"
  },
  "dependencies": {
    "@nestjs/config": "^2.2.0",
    "@nestjs/platform-express": "^9.2.1",
    "@nestjs/swagger": "^6.1.4",
    "@nestjs/typeorm": "^9.0.1",
    "@ntegral/nestjs-sentry": "^4.0.0",
    "@sentry/types": "^7.30.0",
    "dotenv": "^16.0.3",
    "install": "^0.13.0",
    "kafkajs": "^2.2.3",
    "nestjs-s3": "^1.0.1",
    "npm": "^9.3.0",
    "pg": "^8.8.0",
    "starkbank": "2.6.0",
    "swagger-ui-express": "^4.6.0",
    "typeorm": "^0.3.11"
  },
  "devDependencies": {
    "@commitlint/cli": "^17.4.2",
    "@commitlint/config-conventional": "^17.4.2",
    "@compodoc/compodoc": "^1.1.19",
    "@nestjs/cli": "^9.1.8",
    "@nestjs/schematics": "^9.0.4",
    "@nestjs/testing": "^9.2.1",
    "@semantic-release/changelog": "^6.0.2",
    "@semantic-release/commit-analyzer": "^9.0.2",
    "@semantic-release/git": "^10.0.1",
    "@semantic-release/github": "^8.0.7",
    "@semantic-release/npm": "^9.0.2",
    "@semantic-release/release-notes-generator": "^10.0.3",
    "@types/express": "^4.17.15",
    "@types/jest": "^29.2.5",
    "@types/k6": "^0.42.0",
    "@types/node": "^18.11.18",
    "@types/supertest": "^2.0.12",
    "@typescript-eslint/eslint-plugin": "^5.48.1",
    "@typescript-eslint/parser": "^5.48.1",
    "commitizen": "^4.2.6",
    "commitlint-config-jira": "^1.6.4",
    "commitlint-plugin-jira-rules": "^1.6.4",
    "cz-conventional-changelog": "^3.3.0",
    "eslint": "^8.32.0",
    "eslint-config-prettier": "^8.6.0",
    "eslint-plugin-prettier": "^4.2.1",
    "husky": "^8.0.3",
    "jest": "^29.3.1",
    "jest-sonar-reporter": "^2.0.0",
    "prettier": "^2.8.3",
    "semantic-release": "^20.0.2",
    "semantic-release-jira-releases": "^0.7.2",
    "supertest": "^6.3.3",
    "ts-jest": "^29.0.5",
    "ts-loader": "^9.4.2",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.1.2",
    "typescript": "^4.9.4",
    "uuid": "^9.0.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 80,
        "lines": 80,
        "statements": 80
      }
    },
    "coverageDirectory": "../coverage",
    "testEnvironment": "node",
    "testResultsProcessor": "jest-sonar-reporter"
  },
  "jestSonar": {
    "reportPath": "coverage",
    "reportFile": "test-reporter.xml",
    "indent": 4
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog",
      "maxHeaderWidth": 100,
      "maxLineWidth": 100,
      "defaultType": "",
      "defaultScope": "",
      "defaultSubject": "",
      "defaultBody": "",
      "defaultIssues": ""
    }
  }
}
